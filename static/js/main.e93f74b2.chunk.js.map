{"version":3,"sources":["../../src/useUndo.js","../../src/Undo.js","App.js","index.js"],"names":["initial","queue","currentQueuePosition","useUndo","formApi","useForm","useState","state","setState","onValuesChange","useCallback","formState","prevState","values","newQueue","slice","length","concat","onInitialValuesChange","initialValues","useFormState","subscription","onChange","undo","e","preventDefault","change","redo","canUndo","canRedo","Undo","children","App","firstName","setInitialValues","onSubmit","alert","debug","console","log","render","handleSubmit","name","component","onClick","disabled","type","ReactDOM","document","getElementById"],"mappings":"4uBAGA,IAAMA,EAAU,CACdC,MAAO,GACPC,qBAAsB,GAqETC,EAlEC,WACd,IAAMC,EAAUC,cADI,EAEMC,mBAASN,GAFf,mBAEbO,EAFa,KAENC,EAFM,KAIdC,EAAiBC,uBACrB,SAACC,GACCH,GAAS,SAACI,GACR,GAAIA,EAAUX,MAAMW,EAAUV,wBAA0BS,EAAUE,OAAQ,CAExE,IAAMC,EAAWF,EAAUX,MAAMc,MAAMH,EAAUV,qBAAsBU,EAAUX,MAAMe,QACvF,YACKJ,EADL,CAEEV,qBAAsB,EACtBD,MAAO,CAACU,EAAUE,QAAQI,OAAOH,KAInC,OAAOF,OAIb,CAACJ,IAGGU,EAAwBR,uBAC5B,YAAqB,IAAnBS,EAAmB,EAAnBA,cACAX,EAAS,CACPN,qBAAsB,EACtBD,MAAO,CAACkB,OAGZ,CAACX,IAcH,OAXAY,YAAa,CACXC,aAAc,CAACR,QAAQ,GACvBS,SAAUb,IAGZW,YAAa,CACXC,aAAc,CAACF,eAAe,GAC9BG,SAAUJ,IAIL,CACLK,KAAM,SAACC,GACLA,GAAKA,EAAEC,gBAAkBD,EAAEC,iBAG3BjB,GAAS,SAAAI,GAAS,YAASA,EAAT,CAAoBV,qBAAsBU,EAAUV,qBAAuB,OAC7FE,EAAQsB,OAAO,GAAInB,EAAMN,MAAMM,EAAML,qBAAuB,KAE9DyB,KAAM,SAACH,GACLA,GAAKA,EAAEC,gBAAkBD,EAAEC,iBAG3BjB,GAAS,SAAAI,GAAS,YAASA,EAAT,CAAoBV,qBAAsBU,EAAUV,qBAAuB,OAC7FE,EAAQsB,OAAO,GAAInB,EAAMN,MAAMM,EAAML,qBAAuB,KAE9D0B,QAASrB,EAAMN,MAAMe,OAAS,EAAIT,EAAML,qBACxC2B,QAAS,EAAItB,EAAML,qBACnBD,MAAOM,EAAMN,QC7DF6B,EAPF,SAAC,GAIZ,OAAOC,EAFH,EADJA,UAEwB5B,MCwDX6B,MAxDf,WAAgB,IAAD,EAC6B1B,mBAAS,CAAC2B,UAAW,uBADlD,mBACNd,EADM,KACSe,EADT,KASb,OACE,kBAAC,IAAD,CACEC,SATa,SAACtB,GAEhBuB,MAAM,2CAGNF,EAAiBrB,IAKfM,cAAeA,EACfkB,MAAOC,QAAQC,IACfC,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OACN,8BACE,wEACA,6BACE,6CACA,kBAAC,IAAD,CAAOC,KAAK,YAAYC,UAAU,WAEpC,6BACE,8CACA,kBAAC,IAAD,CAAOD,KAAK,aAAaC,UAAU,WAGrC,kBAAC,EAAD,MACG,gBAAEf,EAAF,EAAEA,QAASC,EAAX,EAAWA,QAASN,EAApB,EAAoBA,KAAMI,EAA1B,EAA0BA,KAA1B,OACC,6BACE,4BACEiB,QAASrB,EACTsB,UAAWjB,GAFb,QADF,OAQE,4BACEgB,QAASjB,EACTkB,UAAWhB,GAFb,YASN,4BACEe,QAASH,EACTK,KAAK,UAFP,eC9CVC,IAASP,OAAO,kBAAC,EAAD,MAASQ,SAASC,eAAe,U","file":"static/js/main.e93f74b2.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\nimport {useForm, useFormState} from 'react-final-form';\n\nconst initial = {\n  queue: [],\n  currentQueuePosition: 0,\n};\n\nconst useUndo = () => {\n  const formApi = useForm();\n  const [state, setState] = useState(initial);\n\n  const onValuesChange = useCallback(\n    (formState) => {\n      setState((prevState) => {\n        if (prevState.queue[prevState.currentQueuePosition] !== formState.values) {\n          // fields were changed, adding to the queue\n          const newQueue = prevState.queue.slice(prevState.currentQueuePosition, prevState.queue.length);\n          return {\n            ...prevState,\n            currentQueuePosition: 0,\n            queue: [formState.values].concat(newQueue),\n          };\n        } else {\n          // doing undo or redo, do not add to the queue\n          return prevState;\n        }\n      });\n    },\n    [setState],\n  );\n\n  const onInitialValuesChange = useCallback(\n    ({initialValues}) => {\n      setState({\n        currentQueuePosition: 0,\n        queue: [initialValues],\n      });\n    },\n    [setState],\n  );\n\n  useFormState({\n    subscription: {values: true},\n    onChange: onValuesChange,\n  });\n\n  useFormState({\n    subscription: {initialValues: true},\n    onChange: onInitialValuesChange,\n  });\n\n\n  return {\n    undo: (e) => {\n      e && e.preventDefault && e.preventDefault();\n      // settings value of top level field\n      // TODO: use callback for setState\n      setState(prevState => ({...prevState, currentQueuePosition: prevState.currentQueuePosition + 1}));\n      formApi.change('', state.queue[state.currentQueuePosition + 1]);\n    },\n    redo: (e) => {\n      e && e.preventDefault && e.preventDefault();\n      // settings value of top level field\n      // TODO: use callback for setState\n      setState(prevState => ({...prevState, currentQueuePosition: prevState.currentQueuePosition - 1}));\n      formApi.change('', state.queue[state.currentQueuePosition - 1]);\n    },\n    canUndo: state.queue.length - 1 > state.currentQueuePosition,\n    canRedo: 0 < state.currentQueuePosition,\n    queue: state.queue,\n  };\n};\n\nexport default useUndo;\n","import useUndo from './useUndo';\n\nconst Undo = ({\n  children,\n}) => {\n  const undoRenderProps = useUndo();\n  return children(undoRenderProps);\n};\n\nexport default Undo;\n","import React, {useState} from 'react';\nimport {Form, Field} from 'react-final-form'\nimport {Undo} from \"react-final-form-undo\";\n\n\nfunction App() {\n  const [initialValues, setInitialValues] = useState({firstName: 'Initial first name'})\n  const onSubmit = (values) => {\n    // save form\n    alert('Submitted. Undo/Redo will be reset now.')\n    // initializing form with new values coming from server\n    // undo/redo queue will be reset now because we are changing initial values\n    setInitialValues(values)\n  }\n  return (\n    <Form\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      debug={console.log}\n      render={({handleSubmit}) => (\n        <form>\n          <h2>Simple form with undo/redo functionality</h2>\n          <div>\n            <label>First Name</label>\n            <Field name=\"firstName\" component=\"input\" />\n          </div>\n          <div>\n            <label>Second Name</label>\n            <Field name=\"secondName\" component=\"input\" />\n          </div>\n\n          <Undo>\n            {({canUndo, canRedo, undo, redo}) => (\n              <div>\n                <button\n                  onClick={undo}\n                  disabled={!canUndo}\n                >\n                  Undo\n                </button>\n                &nbsp;\n                <button\n                  onClick={redo}\n                  disabled={!canRedo}\n                >\n                  Redo\n                </button>\n              </div>\n            )}\n          </Undo>\n          <button\n            onClick={handleSubmit}\n            type=\"submit\">\n            Submit\n          </button>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}